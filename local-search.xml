<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Markdown学习总结（超详细）</title>
    <link href="/b4dd708b.html"/>
    <url>/b4dd708b.html</url>
    
    <content type="html"><![CDATA[<h1 id="Spotify打造极致听歌体验"><a href="#Spotify打造极致听歌体验" class="headerlink" title="Spotify打造极致听歌体验"></a>Spotify打造极致听歌体验</h1><iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/5wHjTF4r4aplo2V3GyW80z?utm_source=generator" width="100%" height="152" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe><h1 id="本文题记"><a href="#本文题记" class="headerlink" title="本文题记"></a>本文题记</h1><blockquote><ul><li>回想一下过去,自从开始接触编程语言, 学习的劲头便一发不可收拾,随着各种知识鱼龙混杂交替出现,我发现仅靠我的大脑已经无法掌握住大量的点,之前是使用纸质笔记本进行笔记,但我发现弊端越来越大,我属于那种做笔记但从不看的人,当时记笔记时头脑思路很清晰,但后续发现我再去看笔记的时候,我会发现之前的笔记有所漏洞、不完美,但由于纸质的局限性,添加东西就变得非常困难.后来又使用过CSND 阿里云社区 华为云社区,之后发现审核是一个麻烦事,而且有时候等的时间会很长,况且因为是公共平台的缘故,记录也有了一些所谓的局限性.后来接触到使用Github Page搭建个人博客的这种方式,我发现自由性很强,但由于我学的编程语言不是前端,所以对于web的代码编写只能说心有余而力不足,后来接触到HEXO这种通过本地静态编译的方式进行网站的处理,我发现实施的操作性很强,HEXO网上有很多教程,这也极大的帮助了我进行博客的搭建以及美化.</li><li>由于平时特别喜欢网络相关的东西,所以为个人博客添加一个个性化域名这也成了一个必备的事.这其实原理很简单,因为Github提供了个性化域的功能,所以我只需要注册一个个人域名就行了,对比各个平台(其实大差不差)我选择从阿里云购买一个域名,通过添加域名规则,对域名进行解析,将其重定向到我的Github Page的站点,基本到这就结束了.随着后面的使用,我发现图片越多,网页加载时间就会越长,上网查资料也了解到可以通过懒加载的方式提高网站的加载速度.但是我发现这也没有大概率的提升网站的加载速度.网上说可以通过CDN的方式进行对网站进行加速.那就先记录下什么是CDN吧.</li><li>CDN(Content DElivery Network),中文译为内容分发网络,其实通过学习网络知识,已经大概学习了解到了它的原理.它的本质是通过在各地添加服务器镜像,如果你为自己的个人站点添加了CDN,那么理论上你对网站访问时,他会先请求离你最近的一台服务器镜像,然后查找你需要访问的数据,如果没有的话,该镜像服务器会向根服务器请求数据并复制保存在自己的服务器中,这也解释了为什么配置了CDN后可以大大加速网站的加载速度.这个原理其实类似于DNS,既然又说到了DNS,那就也记录下吧,也许以后看到会有更深的理解,到时候再向上面补充.DNS(Domain Name system)这个东西我想看到这篇文章的应该都已经玩转了吧.对于我上面提到的域名解析就是就是DNS在起作用,DNS分为根域名服务器、顶级域名服务器、二级域名…..在个人电脑上去请求一个网站的数据他会先找到本机存放的host文件查看是否有域名到ip的映射,这个东西平时也叫做本地缓存,如果没有他会默认找你电脑已经配置好的DNS然后去请求,如果该DNS有就会直接返回给你映射的关系,如果没有则会层级递进的向上找,(如果都没有则最终找到根域名服务器)直到找到该域名到ip地址的映射关系.<br>每次请求的映射层级中的域名服务器都会进行将映射备份,当下次请求时,你的解析就会加快.先写到这吧,具体原理什么的后续再开一篇文章好好记录一下.</li><li>上面说到CDN,我选择了Cloudflare这个平台,因为我的站点是托管在GitHub上,无法进行国内备案,再由于该平台是国外的,一拍即合,就是它了.其实里面配置也很简单,也是进行了一个DNS解析记录的添加,然后开启一个CDN的代理,最终呈现的就是现在看到的博客站点.美化方面我只能说copy再copy,真的javascript、css、html这些东西知识点太多了,才刚接触,几乎是不可能或者说我根本没有能力去完成一个代码的创造.不过总要有个开始吧,先使用别人的配置修修补补先用着,后续学习再跟上,最后希望到时候可以完成一个功能实现吧,(好多个主题其实每个主题都有一些好用的东西,主要的目标就是能够完成这些东西的一个整合,然后到时候再添加一些个人的东西,将博客站点打造成真正符合内心想法的一个东西)期盼和小目标还是要有的,要不哪来的动力呀,你说是吧!</li></ul></blockquote><p><img src="https://cdn.pixabay.com/photo/2017/08/06/17/41/sunset-2594543_960_720.jpg" title="来张图片解解优"></p><h1 id="进行正题"><a href="#进行正题" class="headerlink" title="进行正题"></a>进行正题</h1><p>本文主要是记录下自己的学习经历,学习的站点主要包括<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程</a>、<a href="https://markdown.com.cn/basic-syntax/">Markdown官方教程</a>,其实Markdown的语法非常的简单,如果你真正认真学习过一门编程语言,你会发现这个东西很好上手.但由于它是一种标记性语言,你会发现它的语法规范要比C语言等一些语言要求更为严格,它和json、xml、yaml语法学习起来的过程都差不多,也都很易学,所以,在此,记录下自己的学习经历,也当作是对自己整理知识点的一次锻炼.<br>由于本篇是记录Markdown的语法,但上传站点又是使用的Markdown语法,所以能够将语法显示出来,我会在其中添加一些特殊的字符以阻断markdown语法的使用,方便在博客上进行显示,下面添加的特殊字符会详加说明.那么好,进入整体吧.</p><h1 id="一-Markdown标题语法"><a href="#一-Markdown标题语法" class="headerlink" title="一. Markdown标题语法"></a>一. Markdown标题语法</h1><h2 id="Markdown使用-“-”-符号进行标记显示标题"><a href="#Markdown使用-“-”-符号进行标记显示标题" class="headerlink" title="Markdown使用 “#” 符号进行标记显示标题"></a>Markdown使用 “#” 符号进行标记显示标题</h2><p>使用方法如下:<br>#一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题  </p><p>注意: 上面的 “ # “ 后要跟一个空格,由于本片采用markdown语法进行编写,为方便显示,所以中间没有添加空格,一定要加上空格,这点很重要.<br>由于展示上面的标题效果页面会发生混乱,所以就不在进行演示,可自行实验,非常简单.</p><h1 id="二-Markdown换行语法"><a href="#二-Markdown换行语法" class="headerlink" title="二. Markdown换行语法"></a>二. Markdown换行语法</h1><h2 id="Markdown采用每行后面添加两个或多个空格-再敲一个回车实现"><a href="#Markdown采用每行后面添加两个或多个空格-再敲一个回车实现" class="headerlink" title="Markdown采用每行后面添加两个或多个空格,再敲一个回车实现."></a>Markdown采用每行后面添加两个或多个空格,再敲一个回车实现.</h2><p>具体实现如下:<br>这是一行(此处敲两个空格,再敲一个回车,就可以实现换行)<br>这是一个新行</p><p>显示效果如下:<br>这是一行<br>这是一个新行</p><h1 id="三-Markdown段落语法"><a href="#三-Markdown段落语法" class="headerlink" title="三. Markdown段落语法"></a>三. Markdown段落语法</h1><h2 id="Markdown开启一个新的段落采用中间插入一个空行的方式来实现"><a href="#Markdown开启一个新的段落采用中间插入一个空行的方式来实现" class="headerlink" title="Markdown开启一个新的段落采用中间插入一个空行的方式来实现."></a>Markdown开启一个新的段落采用中间插入一个空行的方式来实现.</h2><p>具体实现如下:<br>这是一个段落(两句话中间插入一个空行)</p><p>这是一个新的段落</p><p>显示效果如下:<br>这是一个段落</p><p>这是一个新的段落</p><h1 id="四-Markdown字体语法"><a href="#四-Markdown字体语法" class="headerlink" title="四. Markdown字体语法"></a>四. Markdown字体语法</h1><h2 id="字体显示方面-markdown的使用方式非常简单-主要支持3种字体的显示-分别为-斜体-、粗体、和粗斜体三种"><a href="#字体显示方面-markdown的使用方式非常简单-主要支持3种字体的显示-分别为-斜体-、粗体、和粗斜体三种" class="headerlink" title="字体显示方面,markdown的使用方式非常简单,主要支持3种字体的显示,  分别为 斜体 、粗体、和粗斜体三种."></a>字体显示方面,markdown的使用方式非常简单,主要支持3种字体的显示,  分别为 斜体 、粗体、和粗斜体三种.</h2><p>Markdown语法采用以下方式实现:<br>*这是斜体格式语法`</p><p>**这是粗体语法``</p><p>***这是粗斜体语法```<br>注意:上述后面的星号全部由反引号进行代替,以方便展示</p><p>具体显示效果如下:<br><em>这是斜体格式语法</em><br><strong>这是粗体语法</strong><br><em><strong>这是粗斜体语法</strong></em></p><h1 id="五-Markdown代码语法"><a href="#五-Markdown代码语法" class="headerlink" title="五. Markdown代码语法"></a>五. Markdown代码语法</h1><p>小注: Markdown对于代码区域的支持主要包括 单词或短语  转义反引号  代码块三块内容</p><h2 id="1-由于Markdown使用-符号对代码区进行标记-所以想要显示该符号-就需要用到转义字符"><a href="#1-由于Markdown使用-符号对代码区进行标记-所以想要显示该符号-就需要用到转义字符" class="headerlink" title="1. 由于Markdown使用 ( ` ) 符号对代码区进行标记,所以想要显示该符号,就需要用到转义字符"></a>1. 由于Markdown使用 ( ` ) 符号对代码区进行标记,所以想要显示该符号,就需要用到转义字符</h2><p>   将单词或短语包裹在双反引号(``)中,使用方法如下:<br>   ‘’ <code>code</code>  ‘’ 此处为方便显示我选择使用双引号进行将code进行包裹</p><p>   具体显示效果如下:<br>   <code>`code`</code></p><h2 id="2-使用-进行标记单词或短语"><a href="#2-使用-进行标记单词或短语" class="headerlink" title="2. 使用 ``进行标记单词或短语"></a>2. 使用 ``进行标记单词或短语</h2><p>   为方便显示 此处依旧将其中一个反引号替换为单引号<br>   `code’ 此处后面的单引号改为反引号就可以进行代码显示</p><p>   具体显示效果如下:<br>   <code>code</code></p><h2 id="3-进行代码块的显示"><a href="#3-进行代码块的显示" class="headerlink" title="3. 进行代码块的显示"></a>3. 进行代码块的显示</h2><p>Markdown提供了两种方式</p><h3 id="a-通过每行代码缩进一个TAB键来进行代码块的显示"><a href="#a-通过每行代码缩进一个TAB键来进行代码块的显示" class="headerlink" title="a.通过每行代码缩进一个TAB键来进行代码块的显示"></a>a.通过每行代码缩进一个TAB键来进行代码块的显示</h3><p>   例如:<br>   此处敲一个TAB 代码<br>   此处敲一个TAB 代码<br>   此处敲一个TAB 代码<br>   …….</p><h3 id="b-通过-或者-进行围栏似的将代码进行包裹"><a href="#b-通过-或者-进行围栏似的将代码进行包裹" class="headerlink" title="b.通过(```)或者(~~~)进行围栏似的将代码进行包裹"></a>b.通过(```)或者(~~~)进行围栏似的将代码进行包裹</h3><p>   例如:<br>``~</p><p>代码<br>代码<br>代码<br>…….</p><p>``~ 此处依旧采用上面的方式,通过替换其中一个符号来进行语法的展示</p><p>具体显示效果如下展示:</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs lasso">代码<br>代码<br>代码<br><span class="hljs-params">...</span><span class="hljs-params">...</span><br></code></pre></td></tr></table></figure><h1 id="六-Markdown列表语法"><a href="#六-Markdown列表语法" class="headerlink" title="六. Markdown列表语法"></a>六. Markdown列表语法</h1><h2 id="列表分有序列表和无序列表两种-并且列表可以嵌套其他元素如代码块等-也可以被其他元素嵌套"><a href="#列表分有序列表和无序列表两种-并且列表可以嵌套其他元素如代码块等-也可以被其他元素嵌套" class="headerlink" title="列表分有序列表和无序列表两种,并且列表可以嵌套其他元素如代码块等,也可以被其他元素嵌套"></a>列表分有序列表和无序列表两种,并且列表可以嵌套其他元素如代码块等,也可以被其他元素嵌套</h2><h3 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1. 无序列表"></a>1. 无序列表</h3><h4 id="无序列表采用-四种符号进行标记-并且符号后面必须使用空格将文本与符号隔开"><a href="#无序列表采用-四种符号进行标记-并且符号后面必须使用空格将文本与符号隔开" class="headerlink" title="无序列表采用(-)(*)(+)(-)四种符号进行标记,并且符号后面必须使用空格将文本与符号隔开"></a>无序列表采用(-)(*)(+)(-)四种符号进行标记,并且符号后面必须使用空格将文本与符号隔开</h4><p>四种显示方式如下:<br>-code1<br>*code2<br>+code3<br>-code4<br>此处依旧采用上面的方式,在此我将符号与文本进行连接 ,但要注意使用时一定要加空格,否者会失效无法显示<br>显示效果如下:</p><ul><li>code1</li><li>code2</li><li>code3</li><li>code4</li></ul><h3 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2. 有序列表"></a>2. 有序列表</h3><h4 id="有序列表采用数字进行标识-且必须从-1-开始-并且-后面必须要添加一个空格-但后续的顺序不必按照1234这样排序-但还是建议这样-因为符合人的阅读习惯"><a href="#有序列表采用数字进行标识-且必须从-1-开始-并且-后面必须要添加一个空格-但后续的顺序不必按照1234这样排序-但还是建议这样-因为符合人的阅读习惯" class="headerlink" title="有序列表采用数字进行标识,且必须从 1.开始 并且(.)后面必须要添加一个空格,但后续的顺序不必按照1234这样排序,但还是建议这样,因为符合人的阅读习惯"></a>有序列表采用数字进行标识,且必须从 1.开始 并且(.)后面必须要添加一个空格,但后续的顺序不必按照1234这样排序,但还是建议这样,因为符合人的阅读习惯</h4><p>显示方式如下:<br>1.code1<br>2.code2<br>3.code3<br>4.code4<br>此处依旧采用上面的方式,在此我将符号与文本进行连接 ,但要注意使用时一定要加空格,否者会失效无法显示<br>显示效果如下:</p><ol><li>code1</li><li>code2</li><li>code3</li><li>code4<h3 id="3-在列表中嵌套其他元素"><a href="#3-在列表中嵌套其他元素" class="headerlink" title="3.在列表中嵌套其他元素"></a>3.在列表中嵌套其他元素</h3></li></ol><p>列表嵌套其他元素,按照Markdown语法规范必须在1.的(.)之后添加四个空格或者一个TAB键,然后再添加其他元素<br>其他元素由很多,本次就选用一种,在列表中嵌套代码块(无序列表和有序一样,本次使用有序)<br>因为是再列表中嵌套其他元素,则首先先要满足列表的语法规范,再满足其他元素的语法规范<br>所以再嵌套代码块时,无法再使用(```)(~~~)这样的方式进行围栏似的包裹代码,只能使用每行缩进四个空格或者一个TAB键<br>具体实现如下:<br>1.code1<br>2.code2<br>3.code3<br>4.code4<br>此处按照语法规范1.的(.)后面应该缩进8个空格或者2个TAB键,下面的每行依旧是如此,此处为方便显示,采用不添加空格的方式进行展示,要注意<br>具体显示效果如下:</p><ol><li><pre><code class="hljs"> code1</code></pre></li><li><pre><code class="hljs"> code2</code></pre></li><li><pre><code class="hljs"> code3</code></pre></li><li><pre><code class="hljs"> code4</code></pre><h3 id="4-在其他元素中嵌套列表"><a href="#4-在其他元素中嵌套列表" class="headerlink" title="4.在其他元素中嵌套列表"></a>4.在其他元素中嵌套列表</h3><h4 id="此处还是分为有序和无序-其实都一样-然后就是在其他元素中嵌套-那就必须首先符合其他元素的Markdown语法规范-然后再使用列表符合列表的语法使用规范-所以下面我就写一种-其他的可以照葫芦画瓢-自己尝试一下-很简单"><a href="#此处还是分为有序和无序-其实都一样-然后就是在其他元素中嵌套-那就必须首先符合其他元素的Markdown语法规范-然后再使用列表符合列表的语法使用规范-所以下面我就写一种-其他的可以照葫芦画瓢-自己尝试一下-很简单" class="headerlink" title="此处还是分为有序和无序,其实都一样,然后就是在其他元素中嵌套,那就必须首先符合其他元素的Markdown语法规范,然后再使用列表符合列表的语法使用规范,所以下面我就写一种,其他的可以照葫芦画瓢,自己尝试一下,很简单."></a>此处还是分为有序和无序,其实都一样,然后就是在其他元素中嵌套,那就必须首先符合其他元素的Markdown语法规范,然后再使用列表符合列表的语法使用规范,所以下面我就写一种,其他的可以照葫芦画瓢,自己尝试一下,很简单.</h4>比如我就选择再代码块中嵌套列表<br>具体实现如下:</li></ol><p>``’</p><p>1.code1<br>2.code2<br>3.code3<br>4.code4</p><p>``’<br>此处的三个反引号我改了最后一个,原因就是方便显示,下面的代码语法部分会详细解释<br>显示效果如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> code1<br><span class="hljs-bullet">2.</span> code2<br><span class="hljs-bullet">3.</span> code3<br><span class="hljs-bullet">4.</span> code4<br></code></pre></td></tr></table></figure><h1 id="七-Markdown区块引用语法"><a href="#七-Markdown区块引用语法" class="headerlink" title="七. Markdown区块引用语法"></a>七. Markdown区块引用语法</h1><p>块引用主要是对一个段落或者多个段落进行引用,高级用法还包括嵌套块引用(即块引用另一个块引用)<br>Markdown使用(&gt;)符号进行块引用 符号后直接跟其他元素就行,具体实现偷个懒(太简单就不实现了,直接看效果)<br>具体效果如下:</p><ol><li>单个段落进行块引用<blockquote><p>单个段落</p></blockquote></li><li>多个段落进行块引用<blockquote><p>一个段落</p><p>又一个段落</p></blockquote></li><li>嵌套块引用<blockquote><p>一个段落</p><blockquote><p>另一个段落</p></blockquote></blockquote></li><li>嵌套其他元素<br>这个其实跟上面的列表类似,也是首先要满足区块引用的语法再满足其他元素的语法<br>这个写一下实现方式吧,其实挺简单的(这次还是嵌套代码块,这个比较常用)<br>&lt;code1<br>&lt;code2<br>&lt;code3<br>&lt;&lt;code4<br>&lt;&lt;code5</li></ol><p>依旧采用换符号的方式,这次是将(&gt;)换成(&lt;),要注意.<br>具体显示如下:</p><blockquote><p>  code1<br>  code2<br>  code3</p><blockquote><p> code4<br> code5</p></blockquote></blockquote><h1 id="八-Markdown链接语法"><a href="#八-Markdown链接语法" class="headerlink" title="八. Markdown链接语法"></a>八. Markdown链接语法</h1><h2 id="1-简单方式"><a href="#1-简单方式" class="headerlink" title="1. 简单方式"></a>1. 简单方式</h2><h3 id="a-想要链接显示文本名称-使用下面这种方式"><a href="#a-想要链接显示文本名称-使用下面这种方式" class="headerlink" title="a. 想要链接显示文本名称,使用下面这种方式"></a>a. 想要链接显示文本名称,使用下面这种方式</h3><pre><code class="hljs">[链接名称] (链接地址)</code></pre><h3 id="b-直接显示链接-则使用下面这种方式"><a href="#b-直接显示链接-则使用下面这种方式" class="headerlink" title="b. 直接显示链接,则使用下面这种方式"></a>b. 直接显示链接,则使用下面这种方式</h3><pre><code class="hljs">或者使用 &lt;链接地址&gt;</code></pre><h3 id="例如"><a href="#例如" class="headerlink" title="例如:"></a>例如:</h3><pre><code class="hljs">[Nietzsche的博客] (backrub0420.top)或&lt;backrub0420.top&gt;</code></pre><h2 id="2-高级进阶"><a href="#2-高级进阶" class="headerlink" title="2. 高级进阶"></a>2. 高级进阶</h2><h3 id="Markdown提供变量的方式进行输出链接"><a href="#Markdown提供变量的方式进行输出链接" class="headerlink" title="Markdown提供变量的方式进行输出链接"></a>Markdown提供变量的方式进行输出链接</h3><pre><code class="hljs">方式如下:[显示链接文本] [变量名称][变量名称] :  此处添加一个想要链接的url </code></pre><h3 id="例如-1"><a href="#例如-1" class="headerlink" title="例如:"></a>例如:</h3><pre><code class="hljs">[Nietzsche的博客] [nietzsche][nextzsche] : backrub0420.top</code></pre><p>注意: 上面为了能够显示语法,进行了添加空格的处理    </p><h1 id="九-Markdown图片语法"><a href="#九-Markdown图片语法" class="headerlink" title="九. Markdown图片语法"></a>九. Markdown图片语法</h1><h2 id="1-只引用图片"><a href="#1-只引用图片" class="headerlink" title="1.只引用图片"></a>1.只引用图片</h2><p>! [] (图片url)</p><h2 id="2-为图片添加可选标题"><a href="#2-为图片添加可选标题" class="headerlink" title="2. 为图片添加可选标题"></a>2. 为图片添加可选标题</h2><p>! [] (图片url “在此处写一个图片的标题”)</p><h1 id="十-Markdown分割线语法"><a href="#十-Markdown分割线语法" class="headerlink" title="十. Markdown分割线语法"></a>十. Markdown分割线语法</h1><p>使用方式非常简单,通过(___)(—)(***)三种方式均可实现,但必须保证实在新的一行<br>一个小建议,为了兼容性,在分割线前后都添加一个空行.<br>实现方式就不实现了,很简单.直接看效果<br>具体效果如下:<br>一个段落</p><hr><p>有一个段落</p><hr><p>code</p><hr><p>url</p><h1 id="十一-Markdown表格语法"><a href="#十一-Markdown表格语法" class="headerlink" title="十一. Markdown表格语法"></a>十一. Markdown表格语法</h1><p>为了加强数据的可读性,Markdown语法也支持了表格,就如excel一样,通过表格的方式,可以让数据更加清晰明了.<br>语法主要分为表格的生成  表格中字体的对其  表格中进行格式化文字以及在表格中显示转义字符<br>先写一下表格生成语法和其对其的语法,其他的后续再说.<br>要添加表格,需要使用(—)三个以上的连字符和( | )管道符进行创建,(—)连字符用以隔离标题和元素<br>具体实现如下:<br>| code_language | chinese      |<br>| ————- | ——-      |<br>| C             | C语言        |<br>| Yaml          | 非标记性语言  |</p><p>具体效果如下:</p><table><thead><tr><th>code_language</th><th>chinese</th></tr></thead><tbody><tr><td>C</td><td>C语言</td></tr><tr><td>Yaml</td><td>非标记性语言</td></tr></tbody></table><p>对其方式分为左对齐、右对齐、中间对其三种 主要是靠(—)连字符这一行的(:)位置进行决定的<br>具体实现如下:<br>| code_language | chinese      | Degree of difficulty |<br>| :————- | ——-:     | :—–:             |<br>| C             | C语言        | general              |<br>| Yaml          | 非标记性语言  | simple               |<br>上面(:)控制列的对其方式,在左就是左对其,依次类推.<br>具体效果如下:</p><table><thead><tr><th align="left">code_language</th><th align="right">chinese</th><th align="center">Degree of difficulty</th></tr></thead><tbody><tr><td align="left">C</td><td align="right">C语言</td><td align="center">general</td></tr><tr><td align="left">Yaml</td><td align="right">非标记性语言</td><td align="center">simple</td></tr></tbody></table><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>写到这里,其实还没有完,再次在这里强调一下,这篇文章上传时是markdown的形式,直接写成markdown的形式会无法显示语法的内容,所以我采用了更换符号的方式进行解决,并且更换之后我都进行了说明,希望理解.</p><blockquote><p>这篇并不完善,还有很多漏洞,后续再补吧.<br>就先这样吧,未完待续!</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
